// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime? @default(now())
  role          UserRole  @default(USER)
  image         String?
  accounts      Account[]
  balance       Int       @default(10000)
  tickets       Ticket[]
  createdAt     DateTime  @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum MovieStatus {
  Released
  Suspended
}

model Movie {
  id           String      @id @default(uuid())
  title        String
  poster       String
  trailer      String
  genres       String
  actors       String
  description  String      @db.Text
  year         Int
  duration     Int
  country      String
  studio       String
  director     String
  restrictions Int
  status       MovieStatus @default(Released)
  schedules    Schedule[]
  createdAt    DateTime    @default(now())
}

enum ScheduleStatus {
  Sale
  Completed
  Canceled
}

model Schedule {
  id        String         @id @default(uuid())
  movie     Movie          @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId   String
  startTime DateTime
  endTime   DateTime
  price     Int
  hall      Int
  // seats is a JSON boolean[][], but typificated as string because Prisma types make code logic too hard to read 
  seats     String
  status    ScheduleStatus @default(Sale)
  tikets    Ticket[]
  createdAt DateTime       @default(now())
}

enum TicketStatus {
  Actual
  Expired
  Refunded
}

model Ticket {
  id         String       @id @default(uuid())
  schedule   Schedule     @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  scheduleId String
  owner      User         @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId    String
  row        Int
  col        Int
  status     TicketStatus @default(Actual)
  createdAt  DateTime     @default(now())
}
